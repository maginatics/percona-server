--source include/have_innodb.inc

CREATE TABLE t1 (a INT) ENGINE=InnoDB;
INSERT INTO t1 VALUES(347),(33101),(123),(45),(6);
--error ER_DUP_ENTRY
ALTER TABLE t1 ADD id INT PRIMARY KEY;
ALTER TABLE t1 ADD PRIMARY KEY(a);
# We cannot assign AUTO_INCREMENT values during online index creation.
--error ER_NOT_SUPPORTED_YET
ALTER TABLE t1 DROP PRIMARY KEY, ADD id INT AUTO_INCREMENT PRIMARY KEY,
LOCK=NONE;
--error ER_DUP_ENTRY
ALTER TABLE t1 DROP PRIMARY KEY, ADD id INT PRIMARY KEY, LOCK=NONE;

--error ER_WRONG_AUTO_KEY
ALTER TABLE t1 ADD id INT AUTO_INCREMENT;
--error ER_WRONG_AUTO_KEY
ALTER TABLE t1 ADD id INT AUTO_INCREMENT, ADD INDEX(a, id);
ALTER TABLE t1 ADD id INT NOT NULL, ADD INDEX(id, a);

SELECT * FROM t1;
SET AUTO_INCREMENT_INCREMENT = 5, AUTO_INCREMENT_OFFSET = 30;
ALTER TABLE t1 DROP PRIMARY KEY, ADD id INT AUTO_INCREMENT PRIMARY KEY,
DROP COLUMN id, AUTO_INCREMENT = 42, ALGORITHM=COPY;
BEGIN;
INSERT INTO t1 VALUES(7,0);
SELECT * FROM t1;
ROLLBACK;
SHOW CREATE TABLE t1;

# We cannot assign AUTO_INCREMENT values during online index creation.
--error ER_NOT_SUPPORTED_YET
ALTER TABLE t1 DROP PRIMARY KEY, ADD id INT AUTO_INCREMENT PRIMARY KEY,
DROP COLUMN id, AUTO_INCREMENT = 42, LOCK=NONE;

# ALGORITHM=INPLACE should deliver identical results to ALGORITHM=COPY.
# Currently, it does not, because we ignore auto_increment_offset.
ALTER TABLE t1 DROP PRIMARY KEY, ADD id INT AUTO_INCREMENT PRIMARY KEY,
DROP COLUMN id, AUTO_INCREMENT = 42, ALGORITHM=INPLACE;

SELECT * FROM t1;
SHOW CREATE TABLE t1;

INSERT INTO t1 SET a=123;
INSERT INTO t1 VALUES(-123,-45);

ALTER TABLE t1 AUTO_INCREMENT = 75;

INSERT INTO t1 SET a=123;

SELECT * FROM t1;

DROP TABLE t1;
